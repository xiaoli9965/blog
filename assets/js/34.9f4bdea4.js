(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{468:function(s,t,e){"use strict";e.r(t);var a=e(34),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"_1-redis-集群搭建-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-redis-集群搭建-5"}},[s._v("#")]),s._v(" 1. Redis 集群搭建(5.+)")]),s._v(" "),e("blockquote",[e("p",[s._v("搭建 redis 集群环境最少需要 6 个节点完成\n两台机器,6 个节点 搭建 redis 集群")])]),s._v(" "),e("p",[e("code",[s._v("搭建redis集群前提是你已经下载了redis")])]),s._v(" "),e("h3",{attrs:{id:"_1-1-创建-redis-节点安装目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-创建-redis-节点安装目录"}},[s._v("#")]),s._v(" 1.1. 创建 Redis 节点安装目录")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建集群文件夹")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /opt/redis-cluster/\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入集群文件夹")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v("  /opt/redis-cluster/\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#创建三个节点目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7002")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝解压后redis目录中src文件到redis-cluster")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -r "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/redis-5.0.8/src/ ./\n")])])]),e("p",[s._v("两台机器执行相应的操作")]),s._v(" "),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325214821_5PgNpT_Screenshot.jpeg",alt:"目录结构"}})]),s._v(" "),e("h3",{attrs:{id:"_1-2-配置文件初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-配置文件初始化"}},[s._v("#")]),s._v(" 1.2. 配置文件初始化")]),s._v(" "),e("blockquote",[e("p",[s._v("要创建 redis 集群,必须要修改以下配置:")])]),s._v(" "),e("p",[e("strong",[s._v("官方推荐:")])]),s._v(" "),e("ul",[e("li",[s._v("设置端口:"),e("code",[s._v("port 7000")])]),s._v(" "),e("li",[s._v("开启集群:"),e("code",[s._v("cluster-enabled yes")])]),s._v(" "),e("li",[e("code",[s._v("cluster-config-file nodes-7000.conf")])]),s._v(" "),e("li",[s._v("节点连接超时:"),e("code",[s._v("cluster-node-timeout 5000")])]),s._v(" "),e("li",[s._v("开启 AOF 模式:"),e("code",[s._v("appendonly yes")])])]),s._v(" "),e("p",[e("strong",[s._v("个人附加:")])]),s._v(" "),e("ul",[e("li",[s._v("关闭保护模式:"),e("code",[s._v("protected-mode no")])]),s._v(" "),e("li",[s._v("后台启动:"),e("code",[s._v("daemonize yes")])]),s._v(" "),e("li",[s._v("修改进程日志文件名与端口一致:"),e("code",[s._v("pidfile /var/run/redis_7000.pid")]),s._v(" (不改也行)")]),s._v(" "),e("li",[s._v("指定日志文件名:"),e("code",[s._v('logfile "7000.log"')]),s._v(" (不写也行)")]),s._v(" "),e("li",[s._v("指定集群环境 master 连接密码:"),e("code",[s._v("masterauth xiaoli")])]),s._v(" "),e("li",[s._v("各各节点的连接密码:"),e("code",[s._v("requirepass xiaoli")])])]),s._v(" "),e("blockquote",[e("p",[s._v("🌈 将配置文件修改好之后一一存放到 7000,7001,7002 文件夹中 (配置文件在解压文件夹中)"),e("br"),s._v("\n两台机器执行相应的操作")])]),s._v(" "),e("h3",{attrs:{id:"_1-3-启动-redis-节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-启动-redis-节点"}},[s._v("#")]),s._v(" 1.3. 启动 redis 节点")]),s._v(" "),e("blockquote",[e("p",[s._v("因为有两台机器,所以我们两台机器都要执行同样的操作")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#进入目录,启动节点 (两台机器执行相应的操作)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/redis-cluster/\n./src/redis-server ./7000/redis.conf\n./src/redis-server ./7001/redis.conf\n./src/redis-server ./7002/redis.conf\n")])])]),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325214842_o6XuB5_Screenshot.jpeg",alt:"启动成功"}})]),s._v(" "),e("h2",{attrs:{id:"_1-4-😈-创建集群-建立-redis-主从关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-😈-创建集群-建立-redis-主从关系"}},[s._v("#")]),s._v(" 1.4. 😈 创建集群(建立 Redis 主从关系)")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建集群命令   -a {访问密码}")]),s._v("\n./src/redis-cli --cluster create -a xiaoli "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.128:7000 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.128:7001 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.128:7002  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7000 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7001 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7002 --cluster-replicas "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据提示输如yes就完成了集群搭建")]),s._v("\n")])])]),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325214857_9EYq8O_Screenshot.jpeg",alt:"集群启动成功"}}),s._v(" "),e("img",{attrs:{src:"http://md.yike.link/20200325214913_KNUVf7_Screenshot.jpeg",alt:"启动2"}}),s._v(" "),e("strong",[s._v("集群验证:")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过客户端随便链接一台服务器 -c代表集群模式连接")]),s._v("\n./src/redis-cli -c -h  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" -a xiaoli\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入 查看当前节点信息")]),s._v("\ninfo replication\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看集群信息")]),s._v("\ncluster nodes\n")])])]),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325214928_c6BzWW_Screenshot.jpeg",alt:"查看当前节点信息"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325214945_Ewzgk9_Screenshot.jpeg",alt:"查看集群信息"}})]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("当你连接到从节点进行写入时,会默认移动到主节点进行写入")])]),s._v(" "),e("li",[e("strong",[s._v("在读取时直接通过从节点进行读取")]),s._v(" "),e("img",{attrs:{src:"http://md.yike.link/20200325214959_qs5L4h_Screenshot.jpeg",alt:"7002"}}),s._v(" "),e("code",[s._v("每个Redis节点都有一个永久的ID值,集群内部通过id值进行通信(而不是IP)")])])]),s._v(" "),e("p",[e("strong",[s._v("集群关闭:")]),s._v(" 编写关闭脚本")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /opt/redis-cluster/shutdown.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出入以下命令 ,然后保存:wq")]),s._v("\n/opt/redis-cluster/src/redis-cli -c -h  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v(" -a xiaoli "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n/opt/redis-cluster/src/redis-cli -c -h  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v(" -a xiaoli "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n/opt/redis-cluster/src/redis-cli -c -h  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("7002")]),s._v(" -a xiaoli "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 赋权限")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" u+x shutdown.sh\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行")]),s._v("\n./shutdown.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否关闭成功")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#因为有两台机器,所以两台机器执行相应操作即可")]),s._v("\n")])])]),e("p",[e("strong",[s._v("编写启动脚本:")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /opt/redis-cluster/start.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输如以下命令")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/redis-cluster/\n./src/redis-server ./7000/redis.conf\n./src/redis-server ./7001/redis.conf\n./src/redis-server ./7002/redis.conf\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 赋权")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" u+x start.sh\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否启动成功")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#因为有两台机器,所以两台机器执行相应操作即可")]),s._v("\n")])])]),e("h2",{attrs:{id:"_1-5-1-5-5-集群维护"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-5-5-集群维护"}},[s._v("#")]),s._v(" 1.5. 1.5.5. 集群维护")]),s._v(" "),e("h3",{attrs:{id:"_1-5-1-扩容-新增节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-扩容-新增节点"}},[s._v("#")]),s._v(" 1.5.1. (扩容)新增节点")]),s._v(" "),e("blockquote",[e("p",[s._v("通过 --cluster add-node 新增节点时并不会分配槽,需要自己手动进行分配")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新增节点  add-node {要加的节点} {执行操作的节点}")]),s._v("\n ./src/redis-cli --cluster add-node "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7004 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7000\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新增slave节点  add-node {要加的节点} {执行操作的节点}")]),s._v("\n ./src/redis-cli --cluster add-node "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7004 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7000 --cluster-slave\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新增slave节点,指定主节点  add-node {要加的节点} {执行操作的节点}  --master-id {主节点ID}")]),s._v("\n ./src/redis-cli --cluster add-node "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7004 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7000 --cluster-slave --cluster-master-id xxxxxxxxxxxxxxxxxxx\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为节点分配插槽")]),s._v("\n ./src/redis-cli --cluster reshard "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.129:7004\n\n")])])]),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325215018_RpIFNI_Screenshot.jpeg",alt:"节点添加成功1"}}),s._v(" "),e("img",{attrs:{src:"http://md.yike.link/20200325215031_UsoO5D_Screenshot.jpeg",alt:"节点添加成功2"}})]),s._v(" "),e("h3",{attrs:{id:"_1-5-2-剥离-容缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-剥离-容缩"}},[s._v("#")]),s._v(" 1.5.2. (剥离)容缩")]),s._v(" "),e("blockquote",[e("p",[s._v("cluster reset 清除本节点的集群信息,会退出集群")])]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (容缩)剥离主节点的时候需要先干掉从节点")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --cluster del-node {执行的节点} {要删除的ID}")]),s._v("\n./src/redis-cli --cluster del-node "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".191.128:7002 067f4af2d27fddca7b2aa7c63fb5d4add8a47aab\n\n")])])]),e("h2",{attrs:{id:"_1-6-非官方的集群方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-非官方的集群方案"}},[s._v("#")]),s._v(" 1.6. 非官方的集群方案")]),s._v(" "),e("ul",[e("li",[s._v("豌豆荚开源 Codis")]),s._v(" "),e("li",[s._v("推特的开源 Twemproxy")])]),s._v(" "),e("h2",{attrs:{id:"_2-哨兵"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-哨兵"}},[s._v("#")]),s._v(" 2. 哨兵")]),s._v(" "),e("p",[s._v("redis 哨兵机制主要有三个作用:")]),s._v(" "),e("ul",[e("li",[s._v("监控,通知")]),s._v(" "),e("li",[s._v("自动做故障转移 (主挂了自动提升从为主,主活了从自动退位)")]),s._v(" "),e("li",[s._v("配置提供")])]),s._v(" "),e("p",[e("strong",[s._v("优点:")]),s._v(" 哨兵机制是简单集群管理的利器,可以保证主从的高可用.\n"),e("strong",[s._v("缺点:")]),s._v(" 只解决了高可用,并没有解决主节点的写压力(分片解决)")]),s._v(" "),e("blockquote",[e("p",[s._v("在 redis 集群分片中不需要用到哨兵,因为那个里面的高可用机制类似哨兵并且更强大")])]),s._v(" "),e("p",[e("img",{attrs:{src:"http://md.yike.link/20200325215117_IxfS4A_Screenshot.jpeg",alt:"哨兵架构"}})]),s._v(" "),e("h2",{attrs:{id:"_3-集群分片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-集群分片"}},[s._v("#")]),s._v(" 3. 集群分片")]),s._v(" "),e("ul",[e("li",[s._v("集群会自动进行故障转移,主挂了从会顶上. 但是在这个过程中"),e("code",[s._v("会丢失部分请求(无法避免)")]),s._v(",当主在次起来后从自动退位")]),s._v(" "),e("li",[s._v("集群中会自动平衡主从关系(默认每个主都会分配一个从). 比如:A 主有 2 个从,B 主只有一个从 当 B 主挂了后 B 从升级为主,次数集群会将 A 主其中的一个从一到 B 来当从")]),s._v(" "),e("li",[s._v("在代码中连接集群时碰到节点挂了的情况连接会自动切换到可用节点中")]),s._v(" "),e("li",[s._v("分片也是有弊端的, 比如要做一个取交/差集: 如果一个 KEY 在分片 1 一个 KEY 在分片 2 这个时候是不支持做的,需要用到 TAG 标签使 key 都落在一个分片中 例: USER:INFO:I 中的 "),e("code",[s._v("USER:INFO")]),s._v("就是 TAG")])]),s._v(" "),e("h3",{attrs:{id:"_3-1-投票机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-投票机制"}},[s._v("#")]),s._v(" 3.1. 投票机制")]),s._v(" "),e("ol",[e("li",[s._v("当一个节点通信超时"),e("code",[s._v("cluster-node-timeout")]),s._v("后,会有一个 master 节点发起广播投票")]),s._v(" "),e("li",[s._v("超过半数及诶单认同这个节点挂调之后即整个集群认定这个机器挂了(节点下线,从节点顶上)")]),s._v(" "),e("li",[s._v("当整个集群半数以上节点挂掉后整个集群不可用")])]),s._v(" "),e("h2",{attrs:{id:"_5-redis-功能案例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-redis-功能案例"}},[s._v("#")]),s._v(" 5. Redis 功能案例")]),s._v(" "),e("h3",{attrs:{id:"_4-短信验证码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-短信验证码"}},[s._v("#")]),s._v(" 4. 短信验证码")]),s._v(" "),e("p",[e("em",[s._v("准备两个 Key:")]),s._v(" 过期时间 2 分钟")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("发送次数 KEY:"),e("code",[s._v("VERIFY:PASSWORD_MODIFY:132XXXXX:COUNT")])])]),s._v(" "),e("li",[e("p",[s._v("验证码 KEY:"),e("code",[s._v("VERIFY:PASSWORD_MODIFY:132XXXXX:CODE")])]),s._v(" "),e("p",[s._v("1.用户请求发送验证码时先查 Redis 判断发送次数有没有到达限制,到达了次数限制就拒绝 2.没有到达限制就生成验证码保存到 Redis 3.判断用户输入的值,如果匹配就 删除"),e("code",[s._v("发送次数KEY")]),s._v("和"),e("code",[s._v("验证码KEY")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);