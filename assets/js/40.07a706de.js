(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{474:function(t,a,s){"use strict";s.r(a);var _=s(34),v=Object(_.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"cap-定理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cap-定理"}},[t._v("#")]),t._v(" CAP 定理")]),t._v(" "),s("ul",[s("li",[t._v("一致性 C (Consistency)\n"),s("ul",[s("li",[s("strong",[t._v("强一致性")])]),t._v(" "),s("li",[s("strong",[t._v("弱一致性(最终一致性)")])])])]),t._v(" "),s("li",[t._v("可用性 A (Availability)")]),t._v(" "),s("li",[t._v("分区容错性 P (Partition tolerance)")])]),t._v(" "),s("blockquote",[s("p",[t._v("要达到良好的响应性能来提高用户体验，因此一般都会选择AP保证最终一致性。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200711124229_7Iyyxd_Screenshot.jpeg",alt:"CAP"}})]),t._v(" "),s("h3",{attrs:{id:"强一致性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强一致性"}},[t._v("#")]),t._v(" 强一致性")]),t._v(" "),s("ul",[s("li",[t._v("Paxos 算法")]),t._v(" "),s("li",[t._v("主从同步")]),t._v(" "),s("li",[t._v("Raft 算法")]),t._v(" "),s("li",[t._v("ZAB")])]),t._v(" "),s("h3",{attrs:{id:"弱一致性-最终一致性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#弱一致性-最终一致性"}},[t._v("#")]),t._v(" 弱一致性(最终一致性)")]),t._v(" "),s("ul",[s("li",[t._v("DNS")]),t._v(" "),s("li",[t._v("Gossip")])]),t._v(" "),s("h2",{attrs:{id:"base-理论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#base-理论"}},[t._v("#")]),t._v(" BASE 理论")]),t._v(" "),s("ul",[s("li",[t._v("基本可用 (Basically Available)")]),t._v(" "),s("li",[t._v("软状态 (Soft state)")]),t._v(" "),s("li",[t._v("最终一致性 (Eventual consistency)")])]),t._v(" "),s("blockquote",[s("p",[t._v("Base理论是对CAP中AP的一个扩展，通过牺牲强一致性来获得可用性，当出现故障时要保证核心功能可用，允许数据在一段时间内的不一致，但最终达到一致性的状态，也叫做柔性事务")])]),t._v(" "),s("h2",{attrs:{id:"方式一-xa-规范-jta-协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式一-xa-规范-jta-协议"}},[t._v("#")]),t._v(" 方式一: XA 规范/JTA 协议")]),t._v(" "),s("p",[t._v("需要数据厂商支持 XA 规范,需要 Java 组件有 atomikos 等")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("基于数据库的XA协议来实现的2PC方案就叫XA\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("具体交互")]),t._v(" "),s("p",[t._v("1.TM（事务管理器）向AP（应用）提供编程接口，AP通过TM提交及回滚事务"),s("br"),t._v("\n2.TM通过XA协议来通知数据库进行事务的开启、关闭、提交、回滚")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("流程")]),t._v(" "),s("p",[t._v("1.准备阶段：RM会执行实际的业务操作，但不会提交事务（会锁定资源）"),s("br"),t._v("\n2.提交阶段：RM接收到准备阶段执行回复，然后进行事务提交或回滚操作（释放资源）")])]),t._v(" "),s("h2",{attrs:{id:"方式二-异步校对数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式二-异步校对数据"}},[t._v("#")]),t._v(" 方式二: 异步校对数据")]),t._v(" "),s("p",[t._v("在支付行业比较多,对账单形式")]),t._v(" "),s("h2",{attrs:{id:"方式三-可靠消息-mq-💥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式三-可靠消息-mq-💥"}},[t._v("#")]),t._v(" 方式三: 可靠消息(MQ) 💥")]),t._v(" "),s("p",[t._v("异步场景;通用性强;扩展性高;")]),t._v(" "),s("h2",{attrs:{id:"方式四-tcc-编程式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式四-tcc-编程式"}},[t._v("#")]),t._v(" 方式四: TCC 编程式")]),t._v(" "),s("p",[t._v("一般来讲需要有一套框架支撑..需要公司自己定义协议")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("两阶段提交补偿性主要分为两步实现")]),t._v(" "),s("p",[t._v("try阶段、confirm阶段/Cancel阶段。")]),t._v(" "),s("ul",[s("li",[t._v("try阶段：主要对系统资源进行预留和检查")]),t._v(" "),s("li",[t._v("confirm阶段：当try阶段全部成功时就会执行confirm阶段事务提交。默认情况下只要try成功了就默认confirm阶段一定会成功")]),t._v(" "),s("li",[t._v("concle阶段：当try阶段有失败的时候就会执行concel阶段进行回滚，释放预留资源")])])]),t._v(" "),s("h2",{attrs:{id:"mq-解决分布式事务案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mq-解决分布式事务案例"}},[t._v("#")]),t._v(" MQ 解决分布式事务案例")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("优点")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("缺点")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("通用性强")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("消息处理有延时,需要业务能容忍")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("扩展性强")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("方案成熟")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("h3",{attrs:{id:"设计思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计思路"}},[t._v("#")]),t._v(" 设计思路")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200325213601_eclKfZ_Screenshot.jpeg",alt:"设计思路"}})]),t._v(" "),s("h3",{attrs:{id:"步骤-1-可靠消息生产-记录消息发送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-可靠消息生产-记录消息发送"}},[t._v("#")]),t._v(" 步骤 1-可靠消息生产-记录消息发送")]),t._v(" "),s("ul",[s("li",[t._v("把要发送的数据记录到数据库"),s("code",[t._v("(消息记录表)")])]),t._v(" "),s("li",[t._v("通过定时任务不断轮询判断消息是否发送成功,并记录发送次数")]),t._v(" "),s("li",[t._v("没法成功就重发,并记录次数. "),s("code",[t._v("要保证一定要吧数据发过去")]),t._v(",重试次数太多就出发报警通知运维")]),t._v(" "),s("li",[t._v("通过发布者确认机制"),s("code",[t._v("收到ACK")]),t._v("后即代表消息成功发送")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200325213612_EoibMh_Screenshot.jpeg",alt:"记录消息发送"}})]),t._v(" "),s("h3",{attrs:{id:"步骤-2-修改发送状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-修改发送状态"}},[t._v("#")]),t._v(" 步骤 2-修改发送状态")]),t._v(" "),s("blockquote",[s("p",[t._v("利用 RabbitMQ 的消息确认机制")])]),t._v(" "),s("p",[t._v("如果消息成功发送,收到了 ACK 之后将消息发送状态改为已发送")]),t._v(" "),s("h3",{attrs:{id:"步骤-3-可靠消息处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-可靠消息处理"}},[t._v("#")]),t._v(" 步骤 3-可靠消息处理")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("开启手动 ACK")]),t._v(". 由消费者控制消息的重发/清除/丢弃.")]),t._v(" "),s("li",[s("strong",[t._v("幂等性问题")]),t._v(". 防止重复处理,根据业务 ID 或业务数据判断消息是否重复,重复就不处理")])]),t._v(" "),s("p",[s("strong",[t._v("处理过程:")])]),t._v(" "),s("ul",[s("li",[t._v("当消息正常处理后,就"),s("code",[t._v("手动确认ACK")])]),t._v(" "),s("li",[t._v("如果消息处理失败,返回"),s("code",[t._v("NACK请求消息重发")]),t._v(" "),s("ul",[s("li",[t._v("如果多次尝试一直失败,就进行告警"),s("code",[t._v("人工干预")]),t._v(" 或者 "),s("code",[t._v("放弃操作(需要保留数据)")])])])])]),t._v(" "),s("h3",{attrs:{id:"本地消息表方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地消息表方式"}},[t._v("#")]),t._v(" 本地消息表方式")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200708221137_JozAZt_Screenshot.jpeg",alt:"本地消息表"}})]),t._v(" "),s("ul",[s("li",[t._v("通过不断的扫描消息表并发现送消息到MQ中，监听MQ的应用通过ACK机制保证消息一定能够消费到;")]),t._v(" "),s("li",[t._v("RocketMQ事务消息方案（需要做幂等判断）：1.事务发起时向MQ中发送消息，2.当本地事务执行完毕后返回Commit将MQ中的消息改为可消费状态， 3.事务参与者（其他监听MQ的服务）获取到消息后进行相应的操作")])]),t._v(" "),s("h2",{attrs:{id:"二阶段提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二阶段提交"}},[t._v("#")]),t._v(" 二阶段提交")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200708220117_qZw3Kt_Screenshot.jpeg",alt:"二阶段提交1"}}),t._v(" "),s("img",{attrs:{src:"http://md.yike.link/20200708220043_jOa45t_Screenshot.jpeg",alt:"二阶段提交2"}})]),t._v(" "),s("h2",{attrs:{id:"seata-分布式事务框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seata-分布式事务框架"}},[t._v("#")]),t._v(" seata 分布式事务框架")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("模型")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200708220214_Bx3N1k_Screenshot.jpeg",alt:"seata1"}})])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("模型执行流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://md.yike.link/20200708220233_3X6eMe_Screenshot.jpeg",alt:"seata2"}})])])])}),[],!1,null,null,null);a.default=v.exports}}]);